//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

import "errors"

type FijoyGroupType string

const (
	FijoyGroupType_Cash       FijoyGroupType = "cash"
	FijoyGroupType_Debt       FijoyGroupType = "debt"
	FijoyGroupType_Investment FijoyGroupType = "investment"
	FijoyGroupType_OtherAsset FijoyGroupType = "other_asset"
)

func (e *FijoyGroupType) Scan(value interface{}) error {
	var enumValue string
	switch val := value.(type) {
	case string:
		enumValue = val
	case []byte:
		enumValue = string(val)
	default:
		return errors.New("jet: Invalid scan value for AllTypesEnum enum. Enum value has to be of type string or []byte")
	}

	switch enumValue {
	case "cash":
		*e = FijoyGroupType_Cash
	case "debt":
		*e = FijoyGroupType_Debt
	case "investment":
		*e = FijoyGroupType_Investment
	case "other_asset":
		*e = FijoyGroupType_OtherAsset
	default:
		return errors.New("jet: Invalid scan value '" + enumValue + "' for FijoyGroupType enum")
	}

	return nil
}

func (e FijoyGroupType) String() string {
	return string(e)
}
