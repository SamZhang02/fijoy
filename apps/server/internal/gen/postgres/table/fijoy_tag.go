//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var FijoyTag = newFijoyTagTable("public", "fijoy_tag", "")

type fijoyTagTable struct {
	postgres.Table

	// Columns
	ID          postgres.ColumnString
	WorkspaceID postgres.ColumnString
	Name        postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type FijoyTagTable struct {
	fijoyTagTable

	EXCLUDED fijoyTagTable
}

// AS creates new FijoyTagTable with assigned alias
func (a FijoyTagTable) AS(alias string) *FijoyTagTable {
	return newFijoyTagTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FijoyTagTable with assigned schema name
func (a FijoyTagTable) FromSchema(schemaName string) *FijoyTagTable {
	return newFijoyTagTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FijoyTagTable with assigned table prefix
func (a FijoyTagTable) WithPrefix(prefix string) *FijoyTagTable {
	return newFijoyTagTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FijoyTagTable with assigned table suffix
func (a FijoyTagTable) WithSuffix(suffix string) *FijoyTagTable {
	return newFijoyTagTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFijoyTagTable(schemaName, tableName, alias string) *FijoyTagTable {
	return &FijoyTagTable{
		fijoyTagTable: newFijoyTagTableImpl(schemaName, tableName, alias),
		EXCLUDED:      newFijoyTagTableImpl("", "excluded", ""),
	}
}

func newFijoyTagTableImpl(schemaName, tableName, alias string) fijoyTagTable {
	var (
		IDColumn          = postgres.StringColumn("id")
		WorkspaceIDColumn = postgres.StringColumn("workspace_id")
		NameColumn        = postgres.StringColumn("name")
		allColumns        = postgres.ColumnList{IDColumn, WorkspaceIDColumn, NameColumn}
		mutableColumns    = postgres.ColumnList{WorkspaceIDColumn, NameColumn}
	)

	return fijoyTagTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:          IDColumn,
		WorkspaceID: WorkspaceIDColumn,
		Name:        NameColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
