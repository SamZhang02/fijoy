//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var FijoyPayee = newFijoyPayeeTable("public", "fijoy_payee", "")

type fijoyPayeeTable struct {
	postgres.Table

	// Columns
	ID          postgres.ColumnString
	Name        postgres.ColumnString
	WorkspaceID postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type FijoyPayeeTable struct {
	fijoyPayeeTable

	EXCLUDED fijoyPayeeTable
}

// AS creates new FijoyPayeeTable with assigned alias
func (a FijoyPayeeTable) AS(alias string) *FijoyPayeeTable {
	return newFijoyPayeeTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FijoyPayeeTable with assigned schema name
func (a FijoyPayeeTable) FromSchema(schemaName string) *FijoyPayeeTable {
	return newFijoyPayeeTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FijoyPayeeTable with assigned table prefix
func (a FijoyPayeeTable) WithPrefix(prefix string) *FijoyPayeeTable {
	return newFijoyPayeeTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FijoyPayeeTable with assigned table suffix
func (a FijoyPayeeTable) WithSuffix(suffix string) *FijoyPayeeTable {
	return newFijoyPayeeTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFijoyPayeeTable(schemaName, tableName, alias string) *FijoyPayeeTable {
	return &FijoyPayeeTable{
		fijoyPayeeTable: newFijoyPayeeTableImpl(schemaName, tableName, alias),
		EXCLUDED:        newFijoyPayeeTableImpl("", "excluded", ""),
	}
}

func newFijoyPayeeTableImpl(schemaName, tableName, alias string) fijoyPayeeTable {
	var (
		IDColumn          = postgres.StringColumn("id")
		NameColumn        = postgres.StringColumn("name")
		WorkspaceIDColumn = postgres.StringColumn("workspace_id")
		allColumns        = postgres.ColumnList{IDColumn, NameColumn, WorkspaceIDColumn}
		mutableColumns    = postgres.ColumnList{NameColumn, WorkspaceIDColumn}
	)

	return fijoyPayeeTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:          IDColumn,
		Name:        NameColumn,
		WorkspaceID: WorkspaceIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
