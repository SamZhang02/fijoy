//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var FijoyUser = newFijoyUserTable("public", "fijoy_user", "")

type fijoyUserTable struct {
	postgres.Table

	// Columns
	ID        postgres.ColumnString
	Email     postgres.ColumnString
	CreatedAt postgres.ColumnTimestampz

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type FijoyUserTable struct {
	fijoyUserTable

	EXCLUDED fijoyUserTable
}

// AS creates new FijoyUserTable with assigned alias
func (a FijoyUserTable) AS(alias string) *FijoyUserTable {
	return newFijoyUserTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FijoyUserTable with assigned schema name
func (a FijoyUserTable) FromSchema(schemaName string) *FijoyUserTable {
	return newFijoyUserTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FijoyUserTable with assigned table prefix
func (a FijoyUserTable) WithPrefix(prefix string) *FijoyUserTable {
	return newFijoyUserTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FijoyUserTable with assigned table suffix
func (a FijoyUserTable) WithSuffix(suffix string) *FijoyUserTable {
	return newFijoyUserTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFijoyUserTable(schemaName, tableName, alias string) *FijoyUserTable {
	return &FijoyUserTable{
		fijoyUserTable: newFijoyUserTableImpl(schemaName, tableName, alias),
		EXCLUDED:       newFijoyUserTableImpl("", "excluded", ""),
	}
}

func newFijoyUserTableImpl(schemaName, tableName, alias string) fijoyUserTable {
	var (
		IDColumn        = postgres.StringColumn("id")
		EmailColumn     = postgres.StringColumn("email")
		CreatedAtColumn = postgres.TimestampzColumn("created_at")
		allColumns      = postgres.ColumnList{IDColumn, EmailColumn, CreatedAtColumn}
		mutableColumns  = postgres.ColumnList{EmailColumn, CreatedAtColumn}
	)

	return fijoyUserTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:        IDColumn,
		Email:     EmailColumn,
		CreatedAt: CreatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
