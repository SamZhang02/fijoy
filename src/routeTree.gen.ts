// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PublicImport } from './routes/_public'
import { Route as ProtectedImport } from './routes/_protected'
import { Route as ProtectedWorkspaceIndexImport } from './routes/_protected/workspace/index'

// Create Virtual Routes

const PublicIndexLazyImport = createFileRoute('/_public/')()
const PublicSignupLazyImport = createFileRoute('/_public/signup')()
const PublicLoginLazyImport = createFileRoute('/_public/login')()
const ProtectedSetupLazyImport = createFileRoute('/_protected/setup')()
const ProtectedWorkspaceNamespaceIndexLazyImport = createFileRoute(
  '/_protected/workspace/$namespace/',
)()
const ProtectedWorkspaceNamespaceTransactionsLazyImport = createFileRoute(
  '/_protected/workspace/$namespace/transactions',
)()
const ProtectedWorkspaceNamespaceAccountsLazyImport = createFileRoute(
  '/_protected/workspace/$namespace/accounts',
)()

// Create/Update Routes

const PublicRoute = PublicImport.update({
  id: '/_public',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedRoute = ProtectedImport.update({
  id: '/_protected',
  getParentRoute: () => rootRoute,
} as any)

const PublicIndexLazyRoute = PublicIndexLazyImport.update({
  path: '/',
  getParentRoute: () => PublicRoute,
} as any).lazy(() => import('./routes/_public/index.lazy').then((d) => d.Route))

const PublicSignupLazyRoute = PublicSignupLazyImport.update({
  path: '/signup',
  getParentRoute: () => PublicRoute,
} as any).lazy(() =>
  import('./routes/_public/signup.lazy').then((d) => d.Route),
)

const PublicLoginLazyRoute = PublicLoginLazyImport.update({
  path: '/login',
  getParentRoute: () => PublicRoute,
} as any).lazy(() => import('./routes/_public/login.lazy').then((d) => d.Route))

const ProtectedSetupLazyRoute = ProtectedSetupLazyImport.update({
  path: '/setup',
  getParentRoute: () => ProtectedRoute,
} as any).lazy(() =>
  import('./routes/_protected/setup.lazy').then((d) => d.Route),
)

const ProtectedWorkspaceIndexRoute = ProtectedWorkspaceIndexImport.update({
  path: '/workspace/',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedWorkspaceNamespaceIndexLazyRoute =
  ProtectedWorkspaceNamespaceIndexLazyImport.update({
    path: '/workspace/$namespace/',
    getParentRoute: () => ProtectedRoute,
  } as any).lazy(() =>
    import('./routes/_protected/workspace/$namespace/index.lazy').then(
      (d) => d.Route,
    ),
  )

const ProtectedWorkspaceNamespaceTransactionsLazyRoute =
  ProtectedWorkspaceNamespaceTransactionsLazyImport.update({
    path: '/workspace/$namespace/transactions',
    getParentRoute: () => ProtectedRoute,
  } as any).lazy(() =>
    import('./routes/_protected/workspace/$namespace/transactions.lazy').then(
      (d) => d.Route,
    ),
  )

const ProtectedWorkspaceNamespaceAccountsLazyRoute =
  ProtectedWorkspaceNamespaceAccountsLazyImport.update({
    path: '/workspace/$namespace/accounts',
    getParentRoute: () => ProtectedRoute,
  } as any).lazy(() =>
    import('./routes/_protected/workspace/$namespace/accounts.lazy').then(
      (d) => d.Route,
    ),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_protected': {
      preLoaderRoute: typeof ProtectedImport
      parentRoute: typeof rootRoute
    }
    '/_public': {
      preLoaderRoute: typeof PublicImport
      parentRoute: typeof rootRoute
    }
    '/_protected/setup': {
      preLoaderRoute: typeof ProtectedSetupLazyImport
      parentRoute: typeof ProtectedImport
    }
    '/_public/login': {
      preLoaderRoute: typeof PublicLoginLazyImport
      parentRoute: typeof PublicImport
    }
    '/_public/signup': {
      preLoaderRoute: typeof PublicSignupLazyImport
      parentRoute: typeof PublicImport
    }
    '/_public/': {
      preLoaderRoute: typeof PublicIndexLazyImport
      parentRoute: typeof PublicImport
    }
    '/_protected/workspace/': {
      preLoaderRoute: typeof ProtectedWorkspaceIndexImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/workspace/$namespace/accounts': {
      preLoaderRoute: typeof ProtectedWorkspaceNamespaceAccountsLazyImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/workspace/$namespace/transactions': {
      preLoaderRoute: typeof ProtectedWorkspaceNamespaceTransactionsLazyImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/workspace/$namespace/': {
      preLoaderRoute: typeof ProtectedWorkspaceNamespaceIndexLazyImport
      parentRoute: typeof ProtectedImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  ProtectedRoute.addChildren([
    ProtectedSetupLazyRoute,
    ProtectedWorkspaceIndexRoute,
    ProtectedWorkspaceNamespaceAccountsLazyRoute,
    ProtectedWorkspaceNamespaceTransactionsLazyRoute,
    ProtectedWorkspaceNamespaceIndexLazyRoute,
  ]),
  PublicRoute.addChildren([
    PublicLoginLazyRoute,
    PublicSignupLazyRoute,
    PublicIndexLazyRoute,
  ]),
])
